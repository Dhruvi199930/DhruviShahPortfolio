{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvi/Desktop/Portfolio/DhrumilShahPortfolio/src/components/NavigationBar/NavigationBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { AppBar, Toolbar, Typography, Button, IconButton, Drawer, List, ListItem, ListItemText, Divider, Link } from '@material-ui/core';\nimport { Menu as MenuIcon, Brightness4 as Brightness4Icon, Brightness7 as Brightness7Icon } from '@material-ui/icons';\nimport { useTheme } from '@material-ui/core/styles';\nimport { links } from './links';\nimport { useStyles } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NavigationBar = _ref => {\n  _s();\n\n  let {\n    handleThemeChange\n  } = _ref;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [leftDrawerState, setLeftDrawerState] = useState(false);\n\n  const toggleDrawer = () => {\n    setLeftDrawerState(!leftDrawerState);\n  };\n\n  const onLinkClick = target => {\n    const location = document.querySelector(target).offsetTop;\n    window.scrollTo({\n      left: 0,\n      top: location - 64\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: 'left',\n      open: leftDrawerState,\n      onClose: toggleDrawer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.navDrawer,\n        role: \"presentation\",\n        onClick: toggleDrawer,\n        onKeyDown: toggleDrawer,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: links.map(link => /*#__PURE__*/_jsxDEV(Link, {\n            underline: \"none\",\n            onClick: () => onLinkClick(link.url),\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: link.text,\n                style: {\n                  color: theme.palette.text.primary\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 19\n              }, this)\n            }, link.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this)]\n          }, link.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      style: {\n        backgroundColor: theme.palette.background.default\n      },\n      position: \"fixed\",\n      elevation: 0,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          className: classes.menuButton,\n          \"aria-label\": \"menu\",\n          onClick: toggleDrawer,\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          className: classes.navTitle,\n          children: \"Dhruvi Shah\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.navItems,\n          children: links.map(link => /*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              underline: \"none\",\n              onClick: () => onLinkClick(link.url),\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                style: {\n                  color: theme.palette.text.primary\n                },\n                children: link.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this)\n            }, link.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)\n          }, link.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleThemeChange,\n          children: theme.palette.type === 'dark' ? /*#__PURE__*/_jsxDEV(Brightness7Icon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 46\n          }, this) : /*#__PURE__*/_jsxDEV(Brightness4Icon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 68\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, 'left', true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NavigationBar, \"pD7e7fCzyNeC5skhSsjUG/fgh9E=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c = NavigationBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavigationBar\");","map":{"version":3,"sources":["/Users/dhruvi/Desktop/Portfolio/DhrumilShahPortfolio/src/components/NavigationBar/NavigationBar.js"],"names":["React","useState","AppBar","Toolbar","Typography","Button","IconButton","Drawer","List","ListItem","ListItemText","Divider","Link","Menu","MenuIcon","Brightness4","Brightness4Icon","Brightness7","Brightness7Icon","useTheme","links","useStyles","NavigationBar","handleThemeChange","classes","theme","leftDrawerState","setLeftDrawerState","toggleDrawer","onLinkClick","target","location","document","querySelector","offsetTop","window","scrollTo","left","top","navDrawer","map","link","url","text","color","palette","primary","id","backgroundColor","background","default","menuButton","navTitle","navItems","type"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { AppBar, Toolbar, Typography, Button, IconButton, Drawer, List, ListItem, ListItemText, Divider, Link } from '@material-ui/core';\nimport { Menu as MenuIcon, Brightness4 as Brightness4Icon, Brightness7 as Brightness7Icon } from '@material-ui/icons';\nimport { useTheme } from '@material-ui/core/styles';\nimport { links } from './links';\nimport { useStyles } from './styles';\n\nexport const NavigationBar = ({ handleThemeChange }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [leftDrawerState, setLeftDrawerState] = useState(false);\n\n  const toggleDrawer = () => {\n    setLeftDrawerState(!leftDrawerState);\n  };\n\n  const onLinkClick = (target) => {\n    const location = document.querySelector(target).offsetTop;\n\n    window.scrollTo({\n      left: 0,\n      top: location - 64,\n    })\n  }\n\n  return (\n    <React.Fragment key={'left'}>\n      <Drawer anchor={'left'} open={leftDrawerState} onClose={toggleDrawer}>\n        <div\n          className={classes.navDrawer}\n          role=\"presentation\"\n          onClick={toggleDrawer}\n          onKeyDown={toggleDrawer}>\n          <List>\n            {links.map((link) => (\n              <Link key={link.id} underline=\"none\" onClick={() => onLinkClick(link.url)}>\n                <ListItem button key={link.id}>\n                  <ListItemText primary={link.text} style={{ color: theme.palette.text.primary }} />\n                </ListItem>\n                <Divider />\n              </Link>\n            ))}\n          </List>\n        </div>\n      </Drawer>\n      <AppBar style={{ backgroundColor: theme.palette.background.default }} position='fixed' elevation={0}>\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} aria-label=\"menu\" onClick={toggleDrawer}>\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h4\" className={classes.navTitle}>\n            Dhruvi Shah\n          </Typography>\n          <div className={classes.navItems}>\n            {links.map((link) => (\n              <Button key={link.id} color=\"inherit\">\n                <Link key={link.id} underline=\"none\" onClick={() => onLinkClick(link.url)}>\n                  <Typography style={{ color: theme.palette.text.primary }}>{link.text}</Typography>\n                </Link>\n              </Button>\n            ))}\n          </div>\n          <IconButton onClick={handleThemeChange}>\n            {theme.palette.type === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n};"]},"metadata":{},"sourceType":"module"}